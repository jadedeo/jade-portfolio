{"version":3,"file":"static/js/488.75684a8b.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/back.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/circ.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/clamp.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/progress.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/ease.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/pipe.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/memo.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/array.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/events/event-info.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/distance.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/delay.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/press.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/gestures/focus.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/store.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useClickAway.js","../node_modules/hamburger-react/dist-esm/Burger.js","../node_modules/hamburger-react/dist-esm/Squash.js","../node_modules/motion/dist/es/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/motion/dist/es/motion-utils/dist/es/errors.mjs","../node_modules/motion/dist/es/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/motion/dist/es/framer-motion/dist/es/utils/is-browser.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from '../../../../motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../../../../motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { setDragLock } from '../../../../../motion-dom/dist/es/gestures/drag/state/set-active.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from '../../../../motion-dom/dist/es/gestures/hover.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from '../../../../motion-dom/dist/es/gestures/press/index.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../../../../motion-utils/dist/es/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useRef } from 'react';\nimport { off, on } from './misc/util';\nvar defaultEvents = ['mousedown', 'touchstart'];\nvar useClickAway = function (ref, onClickAway, events) {\n    if (events === void 0) { events = defaultEvents; }\n    var savedCallback = useRef(onClickAway);\n    useEffect(function () {\n        savedCallback.current = onClickAway;\n    }, [onClickAway]);\n    useEffect(function () {\n        var handler = function (event) {\n            var el = ref.current;\n            el && !el.contains(event.target) && savedCallback.current(event);\n        };\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n            var eventName = events_1[_i];\n            on(document, eventName, handler);\n        }\n        return function () {\n            for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n                var eventName = events_2[_i];\n                off(document, eventName, handler);\n            }\n        };\n    }, [events, ref]);\n};\nexport default useClickAway;\n","import { useState, useEffect } from 'react';\nconst area = 48;\nexport const Burger = ({\n  color = 'currentColor',\n  direction = 'left',\n  distance = 'md',\n  duration = 0.4,\n  easing = 'cubic-bezier(0, 0, 0, 1)',\n  hideOutline = true,\n  label,\n  lines = 3,\n  onToggle,\n  render,\n  rounded = false,\n  size = 32,\n  toggle,\n  toggled,\n  disabled = false,\n  animateOnMount = false\n}) => {\n  const [toggledInternal, toggleInternal] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const width = Math.max(12, Math.min(area, size));\n  const room = Math.round((area - width) / 2);\n  const barHeightRaw = width / 12;\n  const barHeight = Math.round(barHeightRaw);\n  const space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n  const marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n  const margin = Math.round(marginRaw);\n  const height = barHeight * lines + margin * (lines - 1);\n  const topOffset = Math.round((area - height) / 2);\n  const translate = lines === 3 ? distance === 'lg' ? 4.0425 : distance === 'sm' ? 5.1625 : 4.6325 : distance === 'lg' ? 6.7875 : distance === 'sm' ? 8.4875 : 7.6675;\n  const deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n  const move = parseFloat((width / translate - deviation / (4 / 3)).toFixed(2));\n  const time = Math.max(0, duration);\n  const burgerStyles = {\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    height: `${area}px`,\n    position: 'relative',\n    transition: `${time}s ${easing}`,\n    userSelect: 'none',\n    width: `${area}px`\n  };\n  const barStyles = {\n    background: color,\n    height: `${barHeight}px`,\n    left: `${room}px`,\n    position: 'absolute'\n  };\n  if (hideOutline) {\n    burgerStyles['outline'] = 'none';\n  }\n  if (rounded) {\n    barStyles['borderRadius'] = '9em';\n  }\n  const getIsToggled = () => {\n    const isToggled = toggled !== undefined ? toggled : toggledInternal;\n    return animateOnMount && !mounted ? !isToggled : isToggled;\n  };\n  const toggleFunction = toggle || toggleInternal;\n  const isToggled = getIsToggled();\n  const handler = () => {\n    toggleFunction(!isToggled);\n    if (typeof onToggle === 'function') onToggle(!isToggled);\n  };\n  return render({\n    barHeight,\n    barStyles,\n    burgerStyles,\n    easing,\n    handler,\n    isLeft: direction === 'left',\n    isToggled,\n    label,\n    margin,\n    move,\n    time,\n    topOffset,\n    width\n  });\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { Burger } from './Burger';\nimport React from 'react';\nexport const Squash = props => /*#__PURE__*/React.createElement(Burger, _extends({}, props, {\n  render: o => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hamburger-react\",\n    \"aria-label\": o.label,\n    \"aria-expanded\": o.isToggled,\n    onClick: props.disabled ? undefined : o.handler,\n    onKeyUp: props.disabled ? undefined : e => e.key === 'Enter' && o.handler(),\n    role: \"button\",\n    style: o.burgerStyles,\n    tabIndex: 0\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      transition: `${o.time / 2}s ${o.easing} ${o.isToggled ? '0s' : `${o.time / 2}s`}`,\n      transform: `${o.isToggled ? `translateY(${o.barHeight + o.margin}px)` : 'none'}`\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...o.barStyles,\n      width: `${o.width}px`,\n      top: `${o.topOffset}px`,\n      transition: `${o.time / 2}s ${o.easing} ${o.isToggled ? `${o.time / 2}s` : '0s'}`,\n      transform: `${o.isToggled ? `rotate(45deg)` : 'none'}`\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      transition: `${o.time / 2}s ${o.easing}`,\n      opacity: `${o.isToggled ? '0' : '1'}`\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...o.barStyles,\n      width: `${o.width}px`,\n      top: `${o.topOffset + o.barHeight + o.margin}px`,\n      transition: `${o.time / 2}s ${o.easing}`\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      transition: `${o.time / 2}s ${o.easing} ${o.isToggled ? '0s' : `${o.time / 2}s`}`,\n      transform: `${o.isToggled ? `translateY(-${o.barHeight + o.margin}px)` : 'none'}`\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...o.barStyles,\n      width: `${o.width}px`,\n      top: `${o.topOffset + o.barHeight * 2 + o.margin * 2}px`,\n      transition: `${o.time / 2}s ${o.easing} ${o.isToggled ? `${o.time / 2}s` : '0s'}`,\n      transform: `${o.isToggled ? `rotate(-45deg)` : 'none'}`\n    }\n  })))\n}));","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from 'motion-utils';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","invariant","concat","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","min","max","number","parse","transform","alpha","_objectSpread","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","render","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","add","frame","read","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","cancel","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","now","clearTime","time","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","reduce","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","stop","cancelFrame","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","callback","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","schedule","microtask","cancelMicrotask","createRenderBatcher","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","PresenceContext","useId","useCallback","usePresence","LayoutGroupContext","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","frameSteps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","filterEvents","handleHoverEvent","lifecycle","isPressing","WeakSet","firePointerEvent","dispatchEvent","PointerEvent","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","tabIndex","isElementKeyboardAccessible","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","motion","obj","_i","apply","off","defaultEvents","onClickAway","savedCallback","el","contains","events_1","events_2","Burger","hideOutline","lines","onToggle","rounded","toggle","toggled","disabled","animateOnMount","toggledInternal","toggleInternal","useState","mounted","setMounted","room","barHeightRaw","barHeight","marginRaw","topOffset","move","toFixed","burgerStyles","cursor","barStyles","background","toggleFunction","isToggled","getIsToggled","isLeft","_extends","Squash","React","className","onClick","onKeyUp","role","stepsOrder","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","queue","createRenderStep","processBatch","keepAlive","immediate","requestAnimationFrame","PopChildMeasure","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","childId","random","_","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","onExit","isEveryExitComplete","isExitComplete","any","maxElapsed"],"sourceRoot":""}