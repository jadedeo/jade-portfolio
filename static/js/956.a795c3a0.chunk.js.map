{"version":3,"file":"static/js/956.a795c3a0.chunk.js","mappings":"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","sources":["components/NavbarMobile.js","components/DoodleCard.js","pages/Doodles.js","components/NavbarDesktop.js","components/Header.js"],"sourcesContent":["import { useClickAway } from \"react-use\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { Squash as Hamburger } from \"hamburger-react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport routes from \"../resources/routes.json\";\nimport { useLocation } from \"react-router-dom\";\n\nconst NavMobile = () => {\n    const [isOpen, setOpen] = useState(false);\n    const ref = useRef(null);\n    const location = useLocation();\n    const isHomepage = location.pathname == \"/\" ? true : false;\n\n    useClickAway(ref, () => setOpen(false));\n\n    return (\n        <nav ref={ref} className=\"md:hidden\" id=\"mobile-navbar\">\n            <Hamburger toggled={isOpen} size={20} toggle={setOpen} />\n            <AnimatePresence>\n                {isOpen && (\n                    <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"h-full fixed left-0 shadow-4xl right-0 top-[5rem] p-5 pt-0 bg-slate-50 z-[999]\"\n                    >\n                        <ul className=\"grid gap-2\">\n                            {routes\n                                .filter(\n                                    (route) =>\n                                        // route.title == \"doodles\" ||\n                                        route.title == \"design\" ||\n                                        route.title == \"development\"\n                                )\n                                .map((route, index) => {\n                                    return (\n                                        <motion.li\n                                            initial={{ scale: 0, opacity: 0 }}\n                                            animate={{ scale: 1, opacity: 1 }}\n                                            transition={{\n                                                type: \"spring\",\n                                                stiffness: 260,\n                                                damping: 20,\n                                                delay: 0.1 + index / 10,\n                                            }}\n                                            key={route.title}\n                                            className=\"w-full p-[0.08rem] \"\n                                        >\n                                            <motion.a\n                                                whileHover={{\n                                                    backgroundColor: \"#e2e8f0\",\n                                                    transition: {\n                                                        duration: 0.5,\n                                                    },\n                                                }}\n                                                onClick={() =>\n                                                    setOpen((prev) => !prev)\n                                                }\n                                                className={\n                                                    \"flex items-center justify-between w-full p-5 bg-slate-50\"\n                                                }\n                                                href={route.href}\n                                            >\n                                                <span className=\"flex gap-1 text-lg\">\n                                                    {route.title}\n                                                </span>\n                                            </motion.a>\n                                        </motion.li>\n                                    );\n                                })}\n                        </ul>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </nav>\n    );\n};\n\nexport default NavMobile;\n","import React, { useState } from \"react\";\nimport { motion } from \"motion/react\";\nimport { AsyncImage } from \"loadable-image\";\n\nconst DoodleCard = ({ image }) => {\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <motion.div\n                whileHover={{\n                    scale: 1.05,\n                    transition: { duration: 0.4, ease: \"easeInOut\" },\n                }}\n                className=\"bg-slate-50 cursor-pointer\"\n                onClick={handleClickOpen}\n            >\n                <AsyncImage\n                    src={image.imagePath}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                        aspectRatio:\n                            image.aspectRatio.width / image.aspectRatio.height,\n                    }}\n                    loader={<div style={{ background: \"#fff\" }} />}\n                    error={<div style={{ background: \"#eee\" }} />}\n                />\n                {image.isPublished && (\n                    <div className=\"flex flex-col gap-2 p-4\">\n                        <div className=\"flex flex-col items-start\">\n                            <h2 className=\"font-display text-lg font-bold\">\n                                {image.title}\n                            </h2>\n                            {image.subtitle && (\n                                <p className=\"\">{image.subtitle}</p>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </motion.div>\n        </>\n    );\n};\n\nexport default DoodleCard;\n","import React, { useState, useEffect } from \"react\";\nimport { motion } from \"motion/react\";\n\n// components\nimport Header from \"../components/Header\";\nimport DoodleCard from \"../components/DoodleCard\";\nimport { Masonry } from \"@mui/lab\";\n\n// other imports\nimport doodleList from \"../resources/doodleList\";\nimport { itemVariants } from \"../resources/utils\";\n\nconst Doodles = () => {\n  const [columns, setColumns] = useState(3);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768 && window.innerWidth > 480) {\n        setColumns(2);\n      } else if (window.innerWidth <= 480) {\n        setColumns(1);\n      } else {\n        setColumns(3);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div id=\"doodles-page\">\n      <Header />\n      <main className=\"py-10 px-[10%]\">\n        <Masonry columns={columns} spacing={{ xs: 2, sm: 2, md: 3 }}>\n          {doodleList.map((image, index) => {\n            return (\n              <motion.div\n                key={index}\n                variants={itemVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                custom={index}\n              >\n                <DoodleCard key={index} image={image} />\n              </motion.div>\n            );\n          })}\n        </Masonry>\n      </main>\n    </div>\n  );\n};\n\nexport default Doodles;\n","import { Link } from \"react-router-dom\";\nimport { motion } from \"motion/react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport routes from \"../resources/routes.json\";\n\nconst NavbarDesktop = () => {\n  const location = useLocation();\n  const isHomepage = location.pathname == \"/\" ? true : false;\n\n  const NavTag = isHomepage ? motion.nav : \"nav\";\n  const LinkTag = isHomepage ? Link : motion.create(Link);\n\n  // console.log(\"isHomepage\", isHomepage);\n\n  return (\n    <NavTag\n      id=\"desktop-navbar\"\n      initial={{ y: 25, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.7, delay: 0.5, ease: \"easeInOut\" }}\n      className=\"hidden md:flex gap-[2em] items-center\"\n    >\n      {routes\n        .filter(\n          (route) =>\n            // route.title == \"doodles\" ||\n            route.title == \"design\" || route.title == \"development\"\n        )\n        .map((route, index) => {\n          return isHomepage ? (\n            <LinkTag key={index} to={route.href} className=\"py-2 px-4\">\n              {route.title}\n            </LinkTag>\n          ) : (\n            <LinkTag key={index} to={route.href} className=\"py-2 px-4\">\n              {route.title}\n            </LinkTag>\n          );\n        })}\n    </NavTag>\n  );\n};\n\nexport default NavbarDesktop;\n","import NavbarDesktop from \"./NavbarDesktop\";\nimport NavbarMobile from \"./NavbarMobile\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = () => {\n    const location = useLocation();\n    const isHomepage = location.pathname == \"/\" ? true : false;\n    // console.log(\"isHomepage\", isHomepage);\n\n    return (\n        !isHomepage && (\n            <>\n                <header\n                    id=\"site-header\"\n                    className=\"flex w-full justify-between py-3 px-[5%]\"\n                >\n                    <Link to=\"/\">\n                        <div className=\"flex py-2 gap-3 items-center\">\n                            {/* <img src=\"logo.png\" className=\"h-10\" /> */}\n                            <h3 className=\"font-semibold font-display\">\n                                jade deo\n                            </h3>\n                        </div>\n                    </Link>\n\n                    <NavbarDesktop />\n                    <NavbarMobile />\n                </header>\n                <hr className=\"mx-[5%]\"></hr>\n            </>\n        )\n    );\n};\n\nexport default Header;\n"],"names":["NavMobile","isOpen","setOpen","useState","ref","useRef","useLocation","pathname","useClickAway","_jsxs","className","id","children","_jsx","Hamburger","toggled","size","toggle","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","routes","filter","route","title","map","index","li","scale","type","stiffness","damping","delay","a","whileHover","backgroundColor","onClick","prev","href","_ref","image","open","_Fragment","ease","handleClickOpen","AsyncImage","src","imagePath","style","width","height","aspectRatio","loader","background","error","isPublished","subtitle","Doodles","columns","setColumns","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","Header","Masonry","spacing","xs","sm","md","doodleList","variants","itemVariants","custom","DoodleCard","NavbarDesktop","isHomepage","NavTag","nav","LinkTag","Link","create","y","to","NavbarMobile"],"sourceRoot":""}